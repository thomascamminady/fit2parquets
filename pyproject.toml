[tool.poetry]
name = "fit2parquets"
version = "0.3.0"
description = ""
authors = ["Thomas Camminady <0milieux_member@icloud.com>"]
readme = "README.md"
repository = "https://github.com/thomascamminady/fit2parquets"
homepage = "https://github.com/thomascamminady/fit2parquets"
documentation = "https://thomascamminady.github.io/fit2parquets"


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
garmin-fit-sdk = "^21.141.0"
polars = "^1.0.0"
pyarrow = "^17.0.0"
fire = "^0.7.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.1"
mypy = "^1.10.0"
isort = "^5.13.2"
pyclean = "^3.0.0"
pre-commit = "^4.0.0"
ipykernel = "^6.29.4"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
rich = "^13.7.1"
regex = "^2024.5.15"
pylint = "^3.2.5"

[tool.poetry.scripts]
fit2parquets = "fit2parquets.__init__:main"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.ignore = [
    "D100",
    "D101",
    "D103",
    "D104",
    "D401",
    "E501",
]
line-length = 80
lint.select = [
    "B",
    "B9",
    "C",
    "D",
    "E",
    "F",
    "N",
    "S",
    "W",
    "I001",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"**/__init__.py" = [
    "D200",
    "D400",
]

[tool.pylint.MASTER]
disable=[
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
]

[tool.pyright]
exclude = [
    ".venv/*",
    ".mypy_cache/*",
    ".pytest_cache/*",
    ".ruff_cache/*",
    ".ipynb_checkpoints/*",
    ".git/*",
    ".github/*",
    "**/__pycache__/*",
    "**/*.pyc",
]
